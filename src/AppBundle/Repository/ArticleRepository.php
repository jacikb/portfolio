<?php

namespace AppBundle\Repository;
use AppBundle\Entity\Article;
use AppBundle\Entity\User;
use AppBundle\Entity\Section;
use Doctrine\ORM\EntityManager;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */


class ArticleRepository extends \Doctrine\ORM\EntityRepository
{


    /**
     * @return mixed
     */
    public function findPublicOrdered()
    {

        return $this->createQueryBuilder("a")
            ->where("a.status = :public")
            ->setParameter("public", Article::STATUS_PUBLIC)
            ->andWhere("a.owner = :owner")
            ->setParameter("owner", Article::EXPOSE_OWNER_ID)
            ->orderBy("a.section", "ASC")
            ->getQuery()
            ->getResult();
    }


    /**
     * @param User $owner
     * @return mixed
     */
    public function findMyOrdered(User $owner)
    {

        return $this->createQueryBuilder("a")
            ->Where("a.owner = :owner")
            ->setParameter("owner", $owner)
            ->orderBy("a.section", "ASC")
            ->getQuery()
            ->getResult();
    }

    /**
     * @param Section $section
     * @return mixed
     */
    public function findArticleBySection(Section $section)
    {
        return $this->createQueryBuilder("a")
            ->Where("a.section = :section")
            ->setParameter("section", $section)
            ->orderBy("a.updatedAt", "ASC")
            ->getQuery()
            ->getResult();
    }

    /**
     * @param Article $article
     * @param EntityManager $em
     * @return $this
     */
    public function addArticle(Article $article, EntityManager $em)
    {


        //$article = $this->em->getRepository(Article::class);
        $article
            ->setStatus(Article::STATUS_PUBLIC)
            ->setOwner($this->getUser());

        $em->persist($article);
        $em->flush();

        return $this;
    }

    /**
     * @param Article $article
     * @return $this
     */
    public function createX(Article $article )
    {

        //$article = $this->em->getRepository(Article::class);
        $article
            ->setStatus(Article::STATUS_PUBLIC)
            ->setOwner($this->getUser());

        $em->persist($article);
        $em->flush();

        return $this;
    }
}
